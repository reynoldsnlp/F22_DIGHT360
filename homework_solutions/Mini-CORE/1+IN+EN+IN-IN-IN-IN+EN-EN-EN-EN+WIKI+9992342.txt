<9992342>
<http://en.wikipedia.org/wiki/Feature_creep>
<Rater 1: IN_EN * Wiki>
<Rater 2: IN_EN * Wiki>
<Rater 3: IN_EN * Wiki>
<Rater 4: IN_EN * Wiki>
<h> Feature creep
<p> Feature creep , creeping featurism or featuritis is the ongoing expansion or addition of new features in a product, such as in computer software . [ 1 ] Extra features go beyond the basic function of the product and so can result in over-complication rather than simple design.
<p> The most common cause of feature creep is the desire to provide the consumer with a more useful or desirable product, in order to increase sales or distribution. However, once the product reaches the point at which it does everything that it is designed to do, the manufacturer is left with the choice of adding unneeded functions, sometimes at the cost of efficiency, or sticking with the old version, at the cost of a perceived lack of improvement.
<p> Another major cause of feature creep might be a compromise from a committee which decides to implement multiple, different viewpoints in the same product. Then, as more features are added to support each viewpoint, it might be necessary to have cross-conversion features between the multiple viewpoints, further complicating the total features.
<p> At the introduction stage, a manufacturer (Sony) trail-blazes a new product (a portable cassette player with the trademark name "Walkman") with the most basic feature set (play, pause, stop, fast forward, rewind, eject) in order to engage the consumer and support use and acceptance; meanwhile, competitors "wait and see" if the product will create a market worth investing in.
<p> At the maturity stage, with competitive products occupying the space, new features are introduced ("auto-reverse", "stereo with extra bass", "shock proof for jogging", "waterproof in the rain"...etc.) in order to differentiate brands beyond merely price point, and to create brand demand over price demand. The trailblazer is looking to fend off the new challengers, while the new challengers are looking to get a leg up on the trailblazer. It is at this stage that a proliferation of features occur most often. In some respects, then, it is understandable that a company succumbs to the constant drive to "one-up" the competition and provide new reasons to say "new and improved" to the consumer, to drive sales.
<p> A strong indicator that the maturity stage has been reached, beyond feature creep, is when the trailblazer's prices start to drop in response to the downward pressure from the competition. Some argue this occurs when there's "nowhere else to go", when there are no further practical features that can be implemented; this point can be referred to as " feature saturation ."
<p> Obsolescence is a primary cause of decline, as time and technology advance beyond the capabilities/value of the incumbent market segment's leading technology. The portable music player platform of the '80s was cassette; of the '90s it was CD; in the 2000s the platform was MP3 ; each successive platform shift effectively rendering the previous platform outdated.
<p> There are several methods to control feature creep, including: strict limits for allowable features, multiple variations, and pruning excess features.
<p> Temptation of later feature creep may be avoided to some degree by basing initial design on strong software fundamentals, such as logical separation of functionality and data access. It can be actively controlled with rigorous change management and by delaying changes to later delivery phases of a project. [ 3 ]
<p> Another method of controlling feature creep is to maintain multiple variations of products, where features are kept limited in some variations. Because the ever-growing, ever-expanding addition of new features might exceed available resources, a minimal core "basic" version of a product can be maintained separately, to ensure operation in smaller operating environments. Using the " 80/20 Rule " the more basic product variations might support the needs of about "80%" of the users, so they would not be subjected to the complexity (or extra expense) of features requested by the other 20% of users. The extra features are still available, but they have not crept into all versions of the products.
<p> At some point, the cost of maintaining a particular subset of features might become prohibitive, and pruning can be used. A new product version could simply omit the extra features, or perhaps a transition period would be used, where old features were deprecated before eventual removal from the system. If there are multiple variations of products, then some of them might be phased out of use.
<p> Occasionally, uncontrolled feature creep can lead to products far beyond the scope of what was originally intended. For example, the video game The Elder Scrolls: Arena was originally intended to be a "medieval style gladiator game", [ 4 ] however due to feature creep the game quickly expanded into a large open role-playing game , spawning several sequels . Another example of this is the game Shogun: Total War , which was originally intended to be simply a "B-grade" [ 5 ] combat simulation game, but also expanded to produce multiple sequels. Microsoft's Windows Vista was planned to be a minor release between Windows XP and then the codenamed Windows "Blackcomb" (Windows 7), but it turned out to become a major release which took 5 years of development. However, a more common consequence of feature creep is a delay or cancellation of the product, which almost invariably becomes more expensive than was originally intended. [ citation needed ] Double Fine Adventures' kickstarter project "Broken Age" is an example of a project being delayed by feature creep. Originally supposed to have a release date of October 2012, the first half of the game will be released in January 2014 while the second half is planned to follow closer to April or May. [ 6 ]
